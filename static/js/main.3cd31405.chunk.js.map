{"version":3,"sources":["style/Global.js","components/base.js","components/AuthUser.js","components/Header.js","components/FormError.js","components/Cards.js","components/MessageListe.js","components/BlogSection.js","components/AddCard.js","components/CreateMessage.js","App.js","serviceWorker.js","index.js"],"names":["Global","createGlobalStyle","firebaseApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","login","nom","a","auth","signInWithPopup","logout","signOut","app","initializeApp","this","facebookProvider","FacebookAuthProvider","twitterProvider","TwitterAuthProvider","googleProvider","GoogleAuthProvider","db","firestore","AuthUser","useState","checkAuthUser","setCheckAuthUser","useEffect","unSubscribe","onAuthStateChanged","user","Header","className","href","onClick","caractere","str","number","cut","split","length","slice","join","__html","Cards","item","isLike","setIsLike","likes","some","like","id","uid","handleLike","likeRef","collection","doc","prevIsLike","updateLike","filter","update","name","displayName","message","titre","src","imgPoste","alt","tags","dangerouslySetInnerHTML","contenue","formatDistanceToNow","time","locale","fr","MessageListe","monState","setMonState","handleSnapshot","snapshot","docs","map","data","orderBy","onSnapshot","key","BlogSection","AddCard","newMessage","handleChange","handleSubmit","enterSubmit","onSubmit","htmlFor","onChange","value","onKeyDown","type","placeholder","required","rows","CreateMessage","INITAL_STATE","setMessage","reset","e","keyCode","preventDefault","handleCreateMessage","Date","now","img","photoURL","add","persist","prevMessage","target","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.3cd31405.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components'\n\nlet Global = createGlobalStyle`\n\n    body{\n        font: 14px/22px Arial,Helvetica,sans-serif;\n    color: #777;\n    padding: 0;\n    margin: 0;\n    background: #fbfbfb url(https://www.miss-thrifty.co.uk/wp-content/themes/miss-thrifty/assets/images/bg_head.jpg) no-repeat 50% 0;\n        }\n    `\n\nexport default Global","import app, {firestore} from 'firebase/app';\nimport 'firebase/auth'\nimport \"firebase/firestore\"\n\n\nlet firebaseApp = {\n    apiKey: \"AIzaSyCsR25KatSd7tNbAjqRLdrJH77WH1eiWLM\",\nauthDomain: \"blog-5fe12.firebaseapp.com\",\ndatabaseURL: \"https://blog-5fe12.firebaseio.com\",\nprojectId: \"blog-5fe12\",\nstorageBucket: \"blog-5fe12.appspot.com\",\nmessagingSenderId: \"920609259836\",\nappId: \"1:920609259836:web:fc09f96478a9633ee11e39\",\nmeasurementId: \"G-ZQ66XN6LPR\"\n}\nclass Firebase {\n    constructor(){\n        app.initializeApp(firebaseApp)\n        this.auth = app.auth()\n\t\t\t\t//mes providers : \n        this.facebookProvider = new app.auth.FacebookAuthProvider()\n        this.twitterProvider = new app.auth.TwitterAuthProvider()\n    this.googleProvider = new app.auth.GoogleAuthProvider()\n      this.db = firestore()\n    }\n    \n\t\t//ma fonction qui prend en paramettre \n\t\t//mon provider comme 'facebook' ou 'twitter'\n\n        login = async (nom) => {\n\t\t\tawait this.auth.signInWithPopup(this[`${nom}Provider`])\n\t\t\t\t}\n\t\t//pour ce déconnecter\n\t\tlogout = () => this.auth.signOut()\n\n}\n\nlet firebase = new Firebase()\n\nexport default firebase","import {useState, useEffect} from 'react'\nimport firebase from './base';\n\n\nlet AuthUser = () =>{\n\t\t\t// cree un state de base vide\n    let [checkAuthUser, setCheckAuthUser] = useState(null)\n\t\t\n\t\t//au moment du chargement de la page\n    useEffect(()=>{\n\t\t\t\t//quand la connection de l'utilisateur est changé \n        let unSubscribe = firebase.auth.onAuthStateChanged(user =>{\n\t\t\t\t\t\t//si user exit alors de déplace dans  le state \n            if(user){\n                setCheckAuthUser(user)\n\t\t\t\t\t\t// sinon le met a null\n            }else{\n                setCheckAuthUser(null)\n            }\n        })\n\t\t\t\t\t\t//quand l'utilisateur quitte , le navigateur quitte bien\n\t\t\treturn () => unSubscribe()\n    }, [])\n\t\t\t\t\t\t//retourn le contenue de mon state \n    return checkAuthUser\n}\n\n\nexport default AuthUser","import React from 'react'\nimport { FaFacebookF } from 'react-icons/fa';\nimport { FaTwitter } from 'react-icons/fa';\nimport { FaYoutube } from 'react-icons/fa';\nimport { FaPinterestP } from 'react-icons/fa';\nimport { FcGoogle } from 'react-icons/fc';\nimport firebase from './base';\nimport AuthUser from './AuthUser';\n\n\nfunction Header() {\n    let user = AuthUser()\n    return (\n        <header>\n            <ul className=\"nav\">\n                <li className=\"li-nav\"><a href=\"#\">HOME</a></li>\n                <li  className=\"li-nav\"><a href=\"#\">ABOUT</a></li>\n                <li className=\"li-nav\"><a href=\"#\">ARCHIVE</a></li>\n                <li className=\"li-nav\"><a href=\"#\">CONTACT ME</a></li>\n            </ul>\n            <div className=\"icon-container\">\n                <FaFacebookF className=\"icon\"/>\n                <FaTwitter className=\"icon\" />\n                <FaYoutube className=\"icon\" />\n                <FaPinterestP className=\"icon\" />\n                {user ? (<button onClick={() => firebase.logout()} className=\"button-user\"> Déconnecter</button>) :(<FcGoogle onClick={() => firebase.login(\"google\")} className=\"icon\"/>) }\n            </div>\n        </header>\n    )\n}\n\nexport default Header","function caractere(str, number){\r\n\r\n    str = str.split(\"\")\r\n    let cut = number - str.length - 15\r\n\r\n    if(str.length > number){\r\n        str =  str.slice(0, cut).join(\"\")\r\n        str = str+= `<a class = \"decoupe\" href=\"#\">Get the lowdown >></a>`\r\n    }else{\r\n        str = str.join(\"\")\r\n    }\r\n    return {__html : str}\r\n}\r\n\r\n//function createMarkup() { return {__html: 'First &middot; Second'}; };\r\n\r\n\r\nexport default caractere ","import React,{useState , useEffect} from 'react'\nimport { FaCalendarAlt } from 'react-icons/fa';\nimport {formatDistanceToNow} from \"date-fns\"\nimport { FcLikePlaceholder } from 'react-icons/fc';\nimport { FcLike } from 'react-icons/fc';\nimport caractere from './FormError';\nimport { fr } from 'date-fns/esm/locale';\n\nimport firebase from './base';\nfunction Cards({item, user}) {\n\n    let [isLike, setIsLike] = useState(false)\n    \n    useEffect(() => {\n        if(user){\n            let isLike = item.likes.some(like => like.id == user.uid)\n            setIsLike(isLike)\n        }\n    }, [user]);\n\n\n    let handleLike = () =>{\n        let likeRef = firebase.db.collection(\"blog\").doc(item.id)\n        setIsLike(prevIsLike => !prevIsLike)\n        if(!isLike){\n            let like = { id : user.uid , name: user.displayName}\n            let updateLike = [...item.likes, like]\n            likeRef.update({likes: updateLike})\n        }else{\n            let updateLike = item.likes.filter(like =>like.id !== user.uid )\n            likeRef.update({likes: updateLike})\n        }\n    }\n    if(item && item.message.titre !== \"\"){\n        return (\n            <div className=\"card\">\n                <img className=\"img-card\" src={item.message.imgPoste} alt=\"poste\"/>\n                <div className=\"flexDescription\">\n                    <p className=\"tags\">{item.message.tags}.</p>\n                        <h4 className='title-card'>{item.message.titre}</h4>\n                    <p className=\"card-description\">\n                    <div dangerouslySetInnerHTML={caractere(item.message.contenue, 300)} />\n                    </p>\n                </div>\n                <div className=\"barCards\">\n                    <img src=\"https://media.discordapp.net/attachments/702298192678748270/727586299086897172/IMG_20200630_200751.jpg?width=702&height=936\" alt=\"profil\"/>\n                    <span>{item.nom}</span>\n                    <FaCalendarAlt className=\"icon-card\"/> <span>&nbsp; il y a {formatDistanceToNow(item.time, {locale: fr})} </span>\n                    {user ? (isLike ? <FcLike onClick={handleLike} className=\"icon-card\"/> : <FcLikePlaceholder onClick={handleLike} className=\"icon-card\" />) :<FcLikePlaceholder className=\"icon-card\" /> }&nbsp; <span>{item.likes.length}</span>\n                </div>\n            </div>\n        )\n    }else{\n        return <></>\n    }\n}\n\nexport default Cards\n","import React, {useState, useEffect} from 'react'\nimport firebase from './base';\nimport Cards from './Cards';\nimport AuthUser from './AuthUser';\n\n//cree un composant qui vas lister les elements de ma database\nfunction MessageListe() {\n    let user = AuthUser()\n    //cree un state 'message' , une liste vide\n    let [monState, setMonState] = useState([])\n\t\t\n    let handleSnapshot = (snapshot) =>{\n\t\t\t\t//cree un onject qui contient l'id du document qui est attribué de base \n\t\t\t\t// et qui contient le contenue du doc avec \"...doc.data()\"\n        let monState = snapshot.docs.map((doc) => ({id: doc.id , ...doc.data()}))\n\t\t\t\t//ajoute messages a mon state \n        setMonState(monState)\n    }\n\t\t\n\t\t//quand firebase est mis a jours\n    useEffect(() => {\n        let getMessage = () =>{\n\n\t\t\t\t\t\t\t/*vas chercher dans la batabase la collection message.\n\t\t\t\t\t\t\t\tle met dans l'ordre grave a mon Date.now() dans l'ordre décroissant\n\t\t\t\t\t\t\t\tet pour tout le snapshot c'est a dire tout le contentu de la collection\n\t\t\t\t\t\t\t\tmessage execute la fonction handleSnapshot.\n\t\t\t\t\t\t\t*/\n             firebase.db.collection('blog').orderBy(\"time\", \"desc\").onSnapshot(handleSnapshot)\n        }\n\t\t\t\t\t//retourn ma fonction getMessage\n        return getMessage()\n\n    }, [firebase])\n    \n    return (\n        <div>\n\n       {monState.map((item, key) => <Cards key={key} item={item} user={user}/>)}\n\n    </div>\n    )\n}\n\nexport default MessageListe","import React from 'react'\nimport { FaBars } from 'react-icons/fa';\nimport Cards from './Cards';\nimport MessageListe from './MessageListe';\n\nfunction BlogSection() {\n    return (\n        <section className=\"section-blog\">\n            <div className=\"selectoinBar\">\n                <h3>Last blog</h3>\n                <div className=\"bar\"></div>\n                <FaBars className=\"icon-section\"/>\n            </div>\n            <MessageListe/>\n            <Cards/>\n        </section>\n    )\n}\n\nexport default BlogSection\n","import React from 'react'\nimport AuthUser from './AuthUser';\n\nfunction AddCard({newMessage , handleChange, handleSubmit, enterSubmit}) {\n\n  let user = AuthUser()\n\n   if(user && user.uid === \"IRYyLgKmQugxrP1kdcl4RpXNFy12\"){\n     return (\n        <div className=\"form-add\">\n                <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleFormControlInput1\">Titre</label>\n        <input onChange={handleChange} value={newMessage.titre} onKeyDown={enterSubmit} name=\"titre\" type=\"txt\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Entrez le titre\" required/>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"FormControlInput1\">Tags</label>\n        <input onChange={handleChange} value={newMessage.tags}  onKeyDown={enterSubmit} name='tags' type=\"txt\" className=\"form-control\" id=\"FormControlInput1\" placeholder=\"Entrez les Tags\" required/>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"FormControlInput2\">Image</label>\n        <input onChange={handleChange} onKeyDown={enterSubmit} value={newMessage.imgPoste} name='imgPoste' type=\"txt\" className=\"form-control\" id=\"FormControlInput2\" placeholder=\"Entrez le liens de l'image\" required/>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleFormControlTextarea1\">le contenue du blog</label>\n        <textarea onChange={handleChange} value={newMessage.contenue} name=\"contenue\" className=\"form-control\" onKeyDown={enterSubmit} id=\"exampleFormControlTextarea1\" rows=\"3\" required></textarea>\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n    </form>\n        </div>\n    )\n   } else{\n     return <> </>\n   }\n}\n\nexport default AddCard\n","import React, {useState} from 'react'\nimport firebase from './base';\nimport AuthUser from './AuthUser';\nimport AddCard from './AddCard';\n\nfunction CreateMessage() {\n    let user = AuthUser()\n\n    let INITAL_STATE = {\n            titre: \"\",\n            tags: \"\",\n            contenue: \"\",\n            imgPoste: \"\"\n    }\n\n    let [message , setMessage] = useState(INITAL_STATE)\n \n\n    let reset = () =>{\n         setMessage(INITAL_STATE)\n    }\n    let enterSubmit = async (e) => {\n        if(e.keyCode == \"13\"){\n          e.preventDefault()\n         await handleCreateMessage()\n          reset()\n        }\n      }\n      let handleSubmit = async (e) =>{\n        e.preventDefault()\n        await handleCreateMessage()\n        reset()\n      }\n\n    let handleChange = (e) => {\n        e.persist()\n        setMessage(prevMessage => ({\n            ...prevMessage,\n            [e.target.name]: e.target.value\n        }))\n    }\n\n    let handleCreateMessage = async () =>{\n        \n        let newMessage = {\n                 nom: user.displayName,\n                 likes: [],\n                 time: Date.now(),\n                 img: user.photoURL,\n                 message,       \n                     }\t\n        await firebase.db.collection('blog').add(newMessage)\n    }\n\n    return (\n       <AddCard newMessage={message} handleChange={handleChange} handleSubmit={handleSubmit} enterSubmit={enterSubmit}/>\n    )\n}\n\nexport default CreateMessage\n","import React from 'react';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Global from './style/Global';\nimport Header from './components/Header';\nimport './style/header.css'\nimport './style/main.css'\nimport BlogSection from './components/BlogSection';\nimport './style/section.css'\nimport \"./style/card.css\"\nimport \"./style/form.css\"\nimport CreateMessage from './components/CreateMessage';\n\nfunction App() {\n\n  return (\n   <>\n    <Global/>\n    <Header/>\n    <h1>mister Deshayes</h1>\n    <BlogSection />\n    <CreateMessage/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}